diff --git a/MODULE.bazel b/MODULE.bazel
new file mode 100644
index 0000000..766d5b9
--- /dev/null
+++ b/MODULE.bazel
@@ -0,0 +1,25 @@
+module(
+    name = "rules_m4",
+    version = "0.2.1",
+    execution_platforms_to_register = [
+        "@local_config_platform//:host",
+    ],
+    toolchains_to_register = [
+        "@rules_m4//m4/toolchains:v1.4.18",
+    ]
+)
+
+initialize_m4_toolchains = use_extension(
+    "@rules_m4//:extensions.bzl",
+    "initialize_m4_toolchains",
+)
+
+initialize_m4_toolchains.configure(
+    version = "1.4.18",
+    extra_copts = [],
+)
+
+use_repo(
+    initialize_m4_toolchains,
+    "m4_v1.4.18",
+)
diff --git a/extensions.bzl b/extensions.bzl
new file mode 100644
index 0000000..4d6fbc0
--- /dev/null
+++ b/extensions.bzl
@@ -0,0 +1,28 @@
+load("@rules_m4//m4/internal:repository.bzl", "m4_repository")
+load("@rules_m4//m4/internal:versions.bzl", "DEFAULT_VERSION", "check_version")
+
+def _initialize_m4_toolchains_impl(module_ctx):
+
+    for module in module_ctx.modules:
+        version = module.tags.configure[0].version
+        extra_copts = module.tags.configure[0].extra_copts
+
+    check_version(version)
+    repo_name = "m4_v{}".format(version)
+    m4_repository(
+        name = repo_name,
+        version = DEFAULT_VERSION,
+        extra_copts = extra_copts,
+    )
+
+initialize_m4_toolchains = module_extension(
+    implementation = _initialize_m4_toolchains_impl,
+    tag_classes = {
+        "configure": tag_class(
+            attrs = {
+                "version": attr.string(),
+                "extra_copts": attr.string_list(),
+            },
+        ),
+    }
+)
